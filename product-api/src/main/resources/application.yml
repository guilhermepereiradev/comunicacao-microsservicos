server:
  port: ${PORT:8081}

spring:

  main:
    allow-bean-definition-overriding: true

  application:
    name: product-api

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5434}/${DB_NAME:product-db}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:12345678}

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    database: POSTGRESQL

  rabbitmq:
    host: ${RABBIT_MQ_HOST:localhost}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USERNAME:guest}
    password: ${RABBIT_MQ_PASSWORD:guest}
    virtual-host: ${RABBIT_MQ_VHOST:}

app-config:

  services:
    sales: http://${SALES_HOST:localhost}:${SALES_PORT:8082}

  secrets:
    api-secret: ${API_SECRET:Y3J1emVpcm8sIGNydXplaXJvIHF1ZXJpZG8sIHTDoG8gY29tYmF0aWRvLCBqYW1haXMgdmVuY2lkbw==}

  rabbit:
    exchange:
      product: product.topic
    routingKey:
      product-stock: product-stock-update.routingKey
      sales-confirmation: sales-confirmation.routingKey
    queue:
      product-stock: product-stock-update.queue
      sales-confirmation: sales-confirmation.queue